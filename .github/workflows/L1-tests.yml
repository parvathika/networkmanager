name: l1-tests

on:
  push:
    branches: [ main, develop]
  pull_request:
    branches: [ main, develop]

env:
  BUILD_TYPE: Debug
  THUNDER_REF: "R4.4.1"
  INTERFACES_REF: "R4.4.1"
  TOOLS_REF: "R4.4.1"

jobs:
 l1-tests:
    name: Build and run unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ gcc, clang ]
        coverage: [ with-coverage, without-coverage ]
        exclude:
          - compiler: clang
            coverage: with-coverage
          - compiler: clang
            coverage: without-coverage
          - compiler: gcc
            coverage: without-coverage

    steps:
      - name: Set up cache
        # Cache Thunder/ThunderInterfaces.
        # https://github.com/actions/cache
        # https://docs.github.com/en/rest/actions/cache
        # Modify the key if changing the list.
        if: ${{ !env.ACT }}
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            build/Thunder
            build/ThunderInterfaces
            build/ThunderTools
            install
            !install/etc/WPEFramework/plugins
            !install/usr/bin/RdkServicesL1Test
            !install/usr/include/gmock
            !install/usr/include/gtest
            !install/usr/lib/libgmockd.a
            !install/usr/lib/libgmock_maind.a
            !install/usr/lib/libgtestd.a
            !install/usr/lib/libgtest_maind.a
            !install/usr/lib/cmake/GTest
            !install/usr/lib/pkgconfig/gmock.pc
            !install/usr/lib/pkgconfig/gmock_main.pc
            !install/usr/lib/pkgconfig/gtest.pc
            !install/usr/lib/pkgconfig/gtest_main.pc
            !install/usr/lib/wpeframework/plugins
          key: ${{ runner.os }}-${{ env.THUNDER_REF }}-${{ env.INTERFACES_REF }}-3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install jsonref

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.16.x'
  
      - name: Install packages
        run: >
          sudo apt update
          &&
          sudo apt install -y libsqlite3-dev libcurl4-openssl-dev valgrind lcov clang libsystemd-dev libboost-all-dev libwebsocketpp-dev meson libcunit1 libcunit1-dev libnm-dev pkg-config

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
          
      - name: Checkout ThunderTools
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: rdkcentral/ThunderTools
          path: ThunderTools
          ref: ${{env.TOOLS_REF}}
          
      - name: Checkout Thunder
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: rdkcentral/Thunder
          path: Thunder
          ref: ${{env.THUNDER_REF}}
          
      - name: Build ThunderTools
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake
          -S "${{github.workspace}}/ThunderTools"
          -B build/ThunderTools
          -DEXCEPTIONS_ENABLE=ON
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DGENERIC_CMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          &&
          cmake --build build/ThunderTools -j8
          &&
          cmake --install build/ThunderTools


      - name: Build Thunder
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake
          -S "${{github.workspace}}/Thunder"
          -B build/Thunder
          -DEXCEPTIONS_ENABLE=ON
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DGENERIC_CMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          &&
          cmake --build build/Thunder -j8
          &&
          cmake --install build/Thunder
          
      - name: Checkout ThunderInterfaces
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: rdkcentral/ThunderInterfaces
          path: ThunderInterfaces
          ref: ${{env.INTERFACES_REF}}

      - name: Build ThunderInterfaces
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake
          -S "${{github.workspace}}/ThunderInterfaces"
          -B build/ThunderInterfaces
          -DEXCEPTIONS_ENABLE=ON
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          &&
          cmake --build build/ThunderInterfaces -j8
          &&
          cmake --install build/ThunderInterfaces

      - name: Checkout networkmanager
        uses: actions/checkout@v3
        with:
          path: networkmanager
          
      - name: Build networkmanager
        run: >
          cmake 
          -Hnetworkmanager
          -B build/networkmanager
          -DCMAKE_INSTALL_PREFIX=install/usr 
          -DCMAKE_MODULE_PATH=${PWD}/install/tools/cmake
          -DENABLE_GNOME_NETWORKMANAGER=ON
          &&
          cmake --build build/networkmanager -j8
          &&
          cmake --install build/networkmanager


 
     
